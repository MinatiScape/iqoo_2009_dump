<?xml version='1.0' encoding='UTF-8'?>
<AiDenoiseConfig version="0.0.22">
    <calculateStd>1</calculateStd>
    <!-- 图像的bit数，这个配置仅在testbed自测AINR时使用。集成后由外部参数决定输入bit数 -->
    <BitWidth>14</BitWidth>
    <ModelPath>/vendor/camera3rd/vivo</ModelPath>
    <!-- 打开水印调试 -->
    <M2Watermark>0</M2Watermark>
	<!--芯片-->
    <Platform>0</Platform>
	<!--网络运行框架-->
    <Frame>qnn</Frame>
    <!--网路运行设备-->
    <Device>3</Device>
    <DenoiserBranch>
        <ISOstart>0</ISOstart>
        <ISOend>400</ISOend>
        <!-- pattern 0: R1G1G2B1, 1 : G1R1B2G2, 2 : B1G2G1R1, 3 : G1B1R2G2-->
        <Pattern>1</Pattern>
        <!-- 黑电平基准，这个默认为10bit下64，不通位宽下的图像会自动换算 -->
        <BlackLevel>0</BlackLevel>
        <!-- sensortype: 0==> PD2011 1==>PD2001 -->
        <SensorType>1</SensorType>
        <!-- ModelName 当前ISO段模型名字 -->
        <ModelName>3L6.bin</ModelName>
        <!-- 网络训练时/实际Sensor的方差校准参数 -->
        <NoiseLevelConfig>
            <A0>0.00087621493</A0>
            <A1>-0.0015868718</A1>
            <B0>2.1337437359e-06</B0>
            <B1>0.00046706451</B1>
            <B2>-0.1000737974</B2>
            <!-- 网络训练时用于校准方差估计的参数，根据网络不同是个固定值，请勿修改 -->
            <Scale>1.0</Scale>
        </NoiseLevelConfig>
        <nnev>
            <RunWidth>560</RunWidth>
            <RunHegiht>560</RunHegiht>
            <InputChannel>2</InputChannel>
            <OutputChannel>1</OutputChannel>
            <RunPattern>0</RunPattern>
            <OutputMin>-0.13529515266418457</OutputMin>
            <OutputMax>0.2364082932472229</OutputMax>
        </nnev>

        <OverLap>16</OverLap>
        <DefaultOverlap>16</DefaultOverlap>
        <ThreadNum>4</ThreadNum>
        <!-- 以下配置仅配置EV0生效 -->
        <!-- 用来控制噪声的调试 -->
        <!-- 方差估计将会自动通过以下公式计算： var_input = var * scale * evscale + evbias -->
        <!-- 例如evscale=0.9，此时方差估计变小，则会放出更多的噪声，若evscale=1.1，则方差估计变大，会导致降噪加强 -->
        <EvScale> 0.96 </EvScale>
        <EvBias> 0 </EvBias>
        <!-- 通过控制residule的维度来控制噪声放出的强弱，考虑原降噪公式： clean_image = observed_image - ResScale * noise -->
        <!-- AI网络估计的是noise这个值，所以当ResScale不等于1.0时，噪声都会呈现均匀增加 -->
        <ResScale> 0.92 </ResScale>
        <!-- 以下参数控制是否进入极度暗区的特殊模式 -->
        <!-- 该模式必须大于该ISO阈值 -->
        <M2Iso> 5000 </M2Iso>
        <!-- 平均亮度阈值小于xx，按0-1来计算 -->
        <M2PixelAvg> 0.2 </M2PixelAvg>
        <!-- 暗区的阈值定义 -->
        <M2BlackAvg> 0.025 </M2BlackAvg>
        <!-- 暗区占比大于xx，按0-1来计算 -->
        <M2BlackRatio> 0.8 </M2BlackRatio>
        <!-- 打开GIC -->
        <GIC> 0 </GIC>
		<!-- 打开pad -->
        <ReflectPad> 1 </ReflectPad>
    </DenoiserBranch>
	<DenoiserBranch>
        <ISOstart>400</ISOstart>
        <ISOend>800</ISOend>
        <!-- pattern 0: R1G1G2B1, 1 : G1R1B2G2, 2 : B1G2G1R1, 3 : G1B1R2G2-->
        <Pattern>1</Pattern>
        <!-- 黑电平基准，这个默认为10bit下64，不通位宽下的图像会自动换算 -->
        <BlackLevel>0</BlackLevel>
        <!-- sensortype: 0==> PD2011 1==>PD2001 -->
        <SensorType>1</SensorType>
        <!-- ModelName 当前ISO段模型名字 -->
        <ModelName>3L6.bin</ModelName>
        <!-- 网络训练时/实际Sensor的方差校准参数 -->
        <NoiseLevelConfig>
            <A0>0.00087621493</A0>
            <A1>-0.0015868718</A1>
            <B0>2.1337437359e-06</B0>
            <B1>0.00046706451</B1>
            <B2>-0.1000737974</B2>
            <!-- 网络训练时用于校准方差估计的参数，根据网络不同是个固定值，请勿修改 -->
            <Scale>1.0</Scale>
        </NoiseLevelConfig>
        <nnev>
            <RunWidth>560</RunWidth>
            <RunHegiht>560</RunHegiht>
            <InputChannel>2</InputChannel>
            <OutputChannel>1</OutputChannel>
            <RunPattern>0</RunPattern>
            <OutputMin>-0.13529515266418457</OutputMin>
            <OutputMax>0.2364082932472229</OutputMax>
        </nnev>

        <OverLap>16</OverLap>
        <DefaultOverlap>16</DefaultOverlap>
        <ThreadNum>4</ThreadNum>
        <!-- 以下配置仅配置EV0生效 -->
        <!-- 用来控制噪声的调试 -->
        <!-- 方差估计将会自动通过以下公式计算： var_input = var * scale * evscale + evbias -->
        <!-- 例如evscale=0.9，此时方差估计变小，则会放出更多的噪声，若evscale=1.1，则方差估计变大，会导致降噪加强 -->
        <EvScale> 0.98 </EvScale>
        <EvBias> 0 </EvBias>
        <!-- 通过控制residule的维度来控制噪声放出的强弱，考虑原降噪公式： clean_image = observed_image - ResScale * noise -->
        <!-- AI网络估计的是noise这个值，所以当ResScale不等于1.0时，噪声都会呈现均匀增加 -->
        <ResScale> 0.96 </ResScale>
        <!-- 以下参数控制是否进入极度暗区的特殊模式 -->
        <!-- 该模式必须大于该ISO阈值 -->
        <M2Iso> 5000 </M2Iso>
        <!-- 平均亮度阈值小于xx，按0-1来计算 -->
        <M2PixelAvg> 0.2 </M2PixelAvg>
        <!-- 暗区的阈值定义 -->
        <M2BlackAvg> 0.025 </M2BlackAvg>
        <!-- 暗区占比大于xx，按0-1来计算 -->
        <M2BlackRatio> 0.8 </M2BlackRatio>
        <!-- 打开GIC -->
        <GIC> 0 </GIC>
		<!-- 打开pad -->
        <ReflectPad> 1 </ReflectPad>
    </DenoiserBranch>
		<DenoiserBranch>
        <ISOstart>800</ISOstart>
        <ISOend>1200</ISOend>
        <!-- pattern 0: R1G1G2B1, 1 : G1R1B2G2, 2 : B1G2G1R1, 3 : G1B1R2G2-->
        <Pattern>1</Pattern>
        <!-- 黑电平基准，这个默认为10bit下64，不通位宽下的图像会自动换算 -->
        <BlackLevel>0</BlackLevel>
        <!-- sensortype: 0==> PD2011 1==>PD2001 -->
        <SensorType>1</SensorType>
        <!-- ModelName 当前ISO段模型名字 -->
        <ModelName>3L6.bin</ModelName>
        <!-- 网络训练时/实际Sensor的方差校准参数 -->
        <NoiseLevelConfig>
            <A0>0.00087621493</A0>
            <A1>-0.0015868718</A1>
            <B0>2.1337437359e-06</B0>
            <B1>0.00046706451</B1>
            <B2>-0.1000737974</B2>
            <!-- 网络训练时用于校准方差估计的参数，根据网络不同是个固定值，请勿修改 -->
            <Scale>1.0</Scale>
        </NoiseLevelConfig>
        <nnev>
            <RunWidth>560</RunWidth>
            <RunHegiht>560</RunHegiht>
            <InputChannel>2</InputChannel>
            <OutputChannel>1</OutputChannel>
            <RunPattern>0</RunPattern>
            <OutputMin>-0.13529515266418457</OutputMin>
            <OutputMax>0.2364082932472229</OutputMax>
        </nnev>

        <OverLap>16</OverLap>
        <DefaultOverlap>16</DefaultOverlap>
        <ThreadNum>4</ThreadNum>
        <!-- 以下配置仅配置EV0生效 -->
        <!-- 用来控制噪声的调试 -->
        <!-- 方差估计将会自动通过以下公式计算： var_input = var * scale * evscale + evbias -->
        <!-- 例如evscale=0.9，此时方差估计变小，则会放出更多的噪声，若evscale=1.1，则方差估计变大，会导致降噪加强 -->
        <EvScale> 0.98 </EvScale>
        <EvBias> 0 </EvBias>
        <!-- 通过控制residule的维度来控制噪声放出的强弱，考虑原降噪公式： clean_image = observed_image - ResScale * noise -->
        <!-- AI网络估计的是noise这个值，所以当ResScale不等于1.0时，噪声都会呈现均匀增加 -->
        <ResScale> 0.95 </ResScale>
        <!-- 以下参数控制是否进入极度暗区的特殊模式 -->
        <!-- 该模式必须大于该ISO阈值 -->
        <M2Iso> 5000 </M2Iso>
        <!-- 平均亮度阈值小于xx，按0-1来计算 -->
        <M2PixelAvg> 0.2 </M2PixelAvg>
        <!-- 暗区的阈值定义 -->
        <M2BlackAvg> 0.025 </M2BlackAvg>
        <!-- 暗区占比大于xx，按0-1来计算 -->
        <M2BlackRatio> 0.8 </M2BlackRatio>
        <!-- 打开GIC -->
        <GIC> 0 </GIC>
		<!-- 打开pad -->
        <ReflectPad> 1 </ReflectPad>
    </DenoiserBranch>
    <DenoiserBranch>
        <ISOstart>1200</ISOstart>
        <ISOend>1600</ISOend>
        <!-- pattern 0: R1G1G2B1, 1 : G1R1B2G2, 2 : B1G2G1R1, 3 : G1B1R2G2-->
        <Pattern>1</Pattern>
        <!-- 黑电平基准，这个默认为10bit下64，不通位宽下的图像会自动换算 -->
        <BlackLevel>0</BlackLevel>
        <!-- sensortype: 0==> PD2011 1==>PD2001 -->
        <SensorType>1</SensorType>
        <!-- ModelName 当前ISO段模型名字 -->
        <ModelName>3L6.bin</ModelName>
        <!-- 网络训练时/实际Sensor的方差校准参数 -->
        <NoiseLevelConfig>
            <A0>0.00087621493</A0>
            <A1>-0.0015868718</A1>
            <B0>2.1337437359e-06</B0>
            <B1>0.00046706451</B1>
            <B2>-0.1000737974</B2>
            <!-- 网络训练时用于校准方差估计的参数，根据网络不同是个固定值，请勿修改 -->
            <Scale>1.0</Scale>
        </NoiseLevelConfig>
        <nnev>
            <RunWidth>560</RunWidth>
            <RunHegiht>560</RunHegiht>
            <InputChannel>2</InputChannel>
            <OutputChannel>1</OutputChannel>
            <RunPattern>0</RunPattern>
            <OutputMin>-0.13529515266418457</OutputMin>
            <OutputMax>0.2364082932472229</OutputMax>
        </nnev>

        <OverLap>16</OverLap>
        <DefaultOverlap>16</DefaultOverlap>
        <ThreadNum>4</ThreadNum>
        <!-- 以下配置仅配置EV0生效 -->
        <!-- 用来控制噪声的调试 -->
        <!-- 方差估计将会自动通过以下公式计算： var_input = var * scale * evscale + evbias -->
        <!-- 例如evscale=0.9，此时方差估计变小，则会放出更多的噪声，若evscale=1.1，则方差估计变大，会导致降噪加强 -->
        <EvScale> 0.98 </EvScale>
        <EvBias> 0 </EvBias>
        <!-- 通过控制residule的维度来控制噪声放出的强弱，考虑原降噪公式： clean_image = observed_image - ResScale * noise -->
        <!-- AI网络估计的是noise这个值，所以当ResScale不等于1.0时，噪声都会呈现均匀增加 -->
        <ResScale> 0.95 </ResScale>
        <!-- 以下参数控制是否进入极度暗区的特殊模式 -->
        <!-- 该模式必须大于该ISO阈值 -->
        <M2Iso> 5000 </M2Iso>
        <!-- 平均亮度阈值小于xx，按0-1来计算 -->
        <M2PixelAvg> 0.2 </M2PixelAvg>
        <!-- 暗区的阈值定义 -->
        <M2BlackAvg> 0.025 </M2BlackAvg>
        <!-- 暗区占比大于xx，按0-1来计算 -->
        <M2BlackRatio> 0.8 </M2BlackRatio>
        <!-- 打开GIC -->
        <GIC> 0 </GIC>
		<!-- 打开pad -->
        <ReflectPad> 1 </ReflectPad>
    </DenoiserBranch>
		<DenoiserBranch>
        <ISOstart>1600</ISOstart>
        <ISOend>3200</ISOend>
        <!-- pattern 0: R1G1G2B1, 1 : G1R1B2G2, 2 : B1G2G1R1, 3 : G1B1R2G2-->
        <Pattern>1</Pattern>
        <!-- 黑电平基准，这个默认为10bit下64，不通位宽下的图像会自动换算 -->
        <BlackLevel>0</BlackLevel>
        <!-- sensortype: 0==> PD2011 1==>PD2001 -->
        <SensorType>1</SensorType>
        <!-- ModelName 当前ISO段模型名字 -->
        <ModelName>3L6.bin</ModelName>
        <!-- 网络训练时/实际Sensor的方差校准参数 -->
        <NoiseLevelConfig>
            <A0>0.00087621493</A0>
            <A1>-0.0015868718</A1>
            <B0>2.1337437359e-06</B0>
            <B1>0.00046706451</B1>
            <B2>-0.1000737974</B2>
            <!-- 网络训练时用于校准方差估计的参数，根据网络不同是个固定值，请勿修改 -->
            <Scale>1.0</Scale>
        </NoiseLevelConfig>
        <nnev>
            <RunWidth>560</RunWidth>
            <RunHegiht>560</RunHegiht>
            <InputChannel>2</InputChannel>
            <OutputChannel>1</OutputChannel>
            <RunPattern>0</RunPattern>
            <OutputMin>-0.13529515266418457</OutputMin>
            <OutputMax>0.2364082932472229</OutputMax>
        </nnev>

        <OverLap>16</OverLap>
        <DefaultOverlap>16</DefaultOverlap>
        <ThreadNum>4</ThreadNum>
        <!-- 以下配置仅配置EV0生效 -->
        <!-- 用来控制噪声的调试 -->
        <!-- 方差估计将会自动通过以下公式计算： var_input = var * scale * evscale + evbias -->
        <!-- 例如evscale=0.9，此时方差估计变小，则会放出更多的噪声，若evscale=1.1，则方差估计变大，会导致降噪加强 -->
        <EvScale> 0.99 </EvScale>
        <EvBias> 0 </EvBias>
        <!-- 通过控制residule的维度来控制噪声放出的强弱，考虑原降噪公式： clean_image = observed_image - ResScale * noise -->
        <!-- AI网络估计的是noise这个值，所以当ResScale不等于1.0时，噪声都会呈现均匀增加 -->
        <ResScale> 0.96 </ResScale>
        <!-- 以下参数控制是否进入极度暗区的特殊模式 -->
        <!-- 该模式必须大于该ISO阈值 -->
        <M2Iso> 5000 </M2Iso>
        <!-- 平均亮度阈值小于xx，按0-1来计算 -->
        <M2PixelAvg> 0.2 </M2PixelAvg>
        <!-- 暗区的阈值定义 -->
        <M2BlackAvg> 0.025 </M2BlackAvg>
        <!-- 暗区占比大于xx，按0-1来计算 -->
        <M2BlackRatio> 0.8 </M2BlackRatio>
        <!-- 打开GIC -->
        <GIC> 0 </GIC>
		<!-- 打开pad -->
        <ReflectPad> 1 </ReflectPad>
    </DenoiserBranch>
	<DenoiserBranch>
        <ISOstart>3200</ISOstart>
        <ISOend>5000</ISOend>
        <!-- pattern 0: R1G1G2B1, 1 : G1R1B2G2, 2 : B1G2G1R1, 3 : G1B1R2G2-->
        <Pattern>1</Pattern>
        <!-- 黑电平基准，这个默认为10bit下64，不通位宽下的图像会自动换算 -->
        <BlackLevel>0</BlackLevel>
        <!-- sensortype: 0==> PD2011 1==>PD2001 -->
        <SensorType>1</SensorType>
        <!-- ModelName 当前ISO段模型名字 -->
        <ModelName>3L6.bin</ModelName>
        <!-- 网络训练时/实际Sensor的方差校准参数 -->
        <NoiseLevelConfig>
            <A0>0.00087621493</A0>
            <A1>-0.0015868718</A1>
            <B0>2.1337437359e-06</B0>
            <B1>0.00046706451</B1>
            <B2>-0.1000737974</B2>
            <!-- 网络训练时用于校准方差估计的参数，根据网络不同是个固定值，请勿修改 -->
            <Scale>1.0</Scale>
        </NoiseLevelConfig>
        <nnev>
            <RunWidth>560</RunWidth>
            <RunHegiht>560</RunHegiht>
            <InputChannel>2</InputChannel>
            <OutputChannel>1</OutputChannel>
            <RunPattern>0</RunPattern>
            <OutputMin>-0.13529515266418457</OutputMin>
            <OutputMax>0.2364082932472229</OutputMax>
        </nnev>

        <OverLap>16</OverLap>
        <DefaultOverlap>16</DefaultOverlap>
        <ThreadNum>4</ThreadNum>
        <!-- 以下配置仅配置EV0生效 -->
        <!-- 用来控制噪声的调试 -->
        <!-- 方差估计将会自动通过以下公式计算： var_input = var * scale * evscale + evbias -->
        <!-- 例如evscale=0.9，此时方差估计变小，则会放出更多的噪声，若evscale=1.1，则方差估计变大，会导致降噪加强 -->
        <EvScale> 1.0 </EvScale>
        <EvBias> 0 </EvBias>
        <!-- 通过控制residule的维度来控制噪声放出的强弱，考虑原降噪公式： clean_image = observed_image - ResScale * noise -->
        <!-- AI网络估计的是noise这个值，所以当ResScale不等于1.0时，噪声都会呈现均匀增加 -->
        <ResScale> 0.96 </ResScale>
        <!-- 以下参数控制是否进入极度暗区的特殊模式 -->
        <!-- 该模式必须大于该ISO阈值 -->
        <M2Iso> 5000 </M2Iso>
        <!-- 平均亮度阈值小于xx，按0-1来计算 -->
        <M2PixelAvg> 0.2 </M2PixelAvg>
        <!-- 暗区的阈值定义 -->
        <M2BlackAvg> 0.025 </M2BlackAvg>
        <!-- 暗区占比大于xx，按0-1来计算 -->
        <M2BlackRatio> 0.8 </M2BlackRatio>
        <!-- 打开GIC -->
        <GIC> 0 </GIC>
		<!-- 打开pad -->
        <ReflectPad> 1 </ReflectPad>
    </DenoiserBranch>
    <DenoiserBranch>
        <ISOstart>5000</ISOstart>
        <ISOend>15000</ISOend>
        <!-- pattern 0: R1G1G2B1, 1 : G1R1B2G2, 2 : B1G2G1R1, 3 : G1B1R2G2-->
        <Pattern>1</Pattern>
        <!-- 黑电平基准，这个默认为10bit下64，不通位宽下的图像会自动换算 -->
        <BlackLevel>0</BlackLevel>
        <!-- sensortype: 0==> PD2011 1==>PD2001 -->
        <SensorType>1</SensorType>
        <!-- ModelName 当前ISO段模型名字 -->
        <ModelName>3L6.bin</ModelName>
        <!-- 网络训练时/实际Sensor的方差校准参数 -->
        <NoiseLevelConfig>
            <A0>0.00087621493</A0>
            <A1>-0.0015868718</A1>
            <B0>2.1337437359e-06</B0>
            <B1>0.00046706451</B1>
            <B2>-0.1000737974</B2>
            <!-- 网络训练时用于校准方差估计的参数，根据网络不同是个固定值，请勿修改 -->
            <Scale>1.0</Scale>
        </NoiseLevelConfig>
        <nnev>
            <RunWidth>560</RunWidth>
            <RunHegiht>560</RunHegiht>
            <InputChannel>2</InputChannel>
            <OutputChannel>1</OutputChannel>
            <RunPattern>0</RunPattern>
            <OutputMin>-0.13529515266418457</OutputMin>
            <OutputMax>0.2364082932472229</OutputMax>
        </nnev>

        <OverLap>16</OverLap>
        <DefaultOverlap>16</DefaultOverlap>
        <ThreadNum>4</ThreadNum>
        <!-- 以下配置仅配置EV0生效 -->
        <!-- 用来控制噪声的调试 -->
        <!-- 方差估计将会自动通过以下公式计算： var_input = var * scale * evscale + evbias -->
        <!-- 例如evscale=0.9，此时方差估计变小，则会放出更多的噪声，若evscale=1.1，则方差估计变大，会导致降噪加强 -->
        <EvScale> 1.0 </EvScale>
        <EvBias> 0 </EvBias>
        <!-- 通过控制residule的维度来控制噪声放出的强弱，考虑原降噪公式： clean_image = observed_image - ResScale * noise -->
        <!-- AI网络估计的是noise这个值，所以当ResScale不等于1.0时，噪声都会呈现均匀增加 -->
        <ResScale> 0.95 </ResScale>
        <!-- 以下参数控制是否进入极度暗区的特殊模式 -->
        <!-- 该模式必须大于该ISO阈值 -->
        <M2Iso> 5000 </M2Iso>
        <!-- 平均亮度阈值小于xx，按0-1来计算 -->
        <M2PixelAvg> 0.2 </M2PixelAvg>
        <!-- 暗区的阈值定义 -->
        <M2BlackAvg> 0.025 </M2BlackAvg>
        <!-- 暗区占比大于xx，按0-1来计算 -->
        <M2BlackRatio> 0.8 </M2BlackRatio>
        <!-- 打开GIC -->
        <GIC> 0 </GIC>
		<!-- 打开pad -->
        <ReflectPad> 1 </ReflectPad>
    </DenoiserBranch>
</AiDenoiseConfig>